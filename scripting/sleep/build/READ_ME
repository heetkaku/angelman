To compute the sleep results follow these steps:

1. Add the 'scripting' directory to Python's path in order to run the code successfully.
 
2. To obtain the dataset containing sleep scores run build.py (scripting/sleep/build/build.py)
   All input arguments have been set to what was used in the manuscript. 
   Make sure the SAVE_PATH is correct. META_PATH will be asked by code interactively. 
   The CSV file pointed by META_PATH needs to be correct depending on which time point is desired.
   For example: If the scores and probabilities are slected for 3 weeks post 3 weeks animals, the META_PATH 
   should point towards .../group_info_3week_post3week.csv
   
3. After running build.py, you should have a dictionary named dset in your workspace.
   This is what dset should look like:
   
   KEY                		  VALUE
   axes (list):		          axes labels for 'data' ndarray. default: ['names', 'epochs', 'score']
   data (ndarray): 	          n-dimensional scores array with the dimensions in the order of 'axes'
   fpaths (list):             list of tuples containing matched score and probability paths
   metadata (dict):           filenames as key and metadata from csv as values
   names (list):              filenames in the order as they are in 'data' along the names dimension (see 'axes')
   
4. To obtain sleep state distribution, run the get_metrics.py script.
   (scripting/sleep/build/get_metrics.py)
   Make sure 'DPATH' is pointing to the desired dataset. Select 'GROUP' as desired. Options include 'a','b','c' or
   'd'. a=AS ASO, b=WT, c=MUT, d=SNORD 115 ASO.
   After running this script successfully, workspace should have a variable named 'dist':
   
   i. dist (ndarray):  n-dimensional array containing proportion of sleep states within each segment with dimensions 
                       following this order; state x segment x animal

NOTE: Sleep is scored for 24 hours for all animals. Each scoring epoch is 4s long. This gives us 21600 epochs for 24 hours.
If you run get_metrics.py with default settings, it will yield results for 2 hour segments and dist.shape[1] = 12.
(Meaning 12, 2-hour segments making 24 hours in total).

See docs for SPINDLE publication, the automated sleep scoring algorithm used to generate results.
